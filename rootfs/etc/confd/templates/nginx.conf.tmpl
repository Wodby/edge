user nginx;
worker_processes 1;
error_log stderr crit;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time status $status';
    access_log /dev/stdout upstreamlog;

    proxy_connect_timeout 60;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    proxy_intercept_errors on;
    proxy_cache off;
    proxy_request_buffering off;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    client_max_body_size 256M;

    port_in_redirect off;
    send_timeout 600;
    sendfile on;
    keepalive_requests 100;
    keepalive_timeout 60;
    reset_timedout_connection off;
    server_tokens off;

    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 2;
    gzip_http_version 1.1;
    gzip_min_length 10240;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
    gzip_vary on;
    gzip_proxied any;
    gzip_disable msie6;

    index index.html index.htm;
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 20480;

    add_header X-Wodby-Node '{{ getenv "WODBY_NODE_UUID" }}' always;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $http_x_forwarded_proto $thescheme {
        default $scheme;
        https https;
    }

{{if ls "/http"}}{{range gets "/http/*"}}{{$domain := base .Key}}{{$data := json .Value}}
    server {
        listen 80;
        {{if $data.ssl}}listen 443 ssl;{{end}}
        server_name {{$domain}};

        location /.well-known/acme-challenge {
            root /mnt/containers/edge;
        }

{{if $data.redir_www}}
        return 301 $scheme://www.$server_name$request_uri;
{{else if $data.redir_no_www}}
        return 301 $scheme://$server_name$request_uri;
{{end}}

{{if $data.ssl_required}}
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
{{end}}

{{if $data.ssl}}
        ssl_certificate /mnt/containers/edge/certificates/{{$domain}}.crt;
        ssl_certificate_key /mnt/containers/edge/certificates/{{$domain}}.key;

        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 5m;

        ssl_dhparam /etc/nginx/pki/dhparam.pem;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

        resolver 8.8.8.8;
        ssl_stapling on;
        ssl_trusted_certificate /mnt/containers/edge/certificates/{{$domain}}.crt;

        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
{{end}}

        location / {
            {{if $data.maintenance}}return 503;{{end}}

        {{if $data.auth}}
            auth_basic "Restricted";
            auth_basic_user_file /mnt/containers/edge/.htpasswd;
        {{end}}

            proxy_pass {{$data.proxy_proto}}://{{$data.proxy_addr}}:{{$data.proxy_port}};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }
{{ end }}{{ end }}

    server {
        listen 80 default_server;
        server_name localhost;
        root /usr/share/nginx/html;
        error_page 404 /index.html;
        location / {
            return 404;
        }
        location = /index.html {
            root /usr/share/nginx/html;
        }
        location = /backup404.html {
            root /usr/share/nginx/html;
        }
        location /backups/ {
            autoindex off;
            error_page 404 /backup404.html;
            root /usr/share/nginx/html;
        }
    }
}
